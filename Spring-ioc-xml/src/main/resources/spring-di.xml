<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- setter注入 -->
    <bean id="studentOne" class="com.ygq.spring6.bean.Student">
        <!-- property标签：通过组件类的setXxx()方法给组件对象设置属性 -->
        <!-- name属性：指定属性名（这个属性名是getXxx()、setXxx()方法定义的，和成员变量无关） -->
        <!-- value属性：指定属性值 -->
        <property name="id" value="1001"> </property>
        <property name="name" value="张三"> </property>
        <property name="age" value="23"> </property>
        <property name="sex" value="男"> </property>
    </bean>

    <!-- 构造器注入 -->
    <bean id="studentTwo" class="com.ygq.spring6.bean.Student">
        <constructor-arg value="1002"> </constructor-arg>
        <constructor-arg value="李四"> </constructor-arg>
        <constructor-arg value="25"> </constructor-arg>
        <constructor-arg value="女"> </constructor-arg>
    </bean>

    <!-- 特殊值处理 -->
    <bean id="studentThree" class="com.ygq.spring6.bean.Student">
        <property name="id" value="1003"> </property>
        <!--<property name="name" value="a &lt; b"> </property>-->
        <!-- XML中的小于号和大于号不能随便使用，因此注入时要用 &lt;(lower than) &gt;(great than) 代替'<'和'>'符号 -->
        <!-- 也可以使用CDATA节来处理以上问题，XML解析器看到CDATA节就知道这里是纯文本，就不会当作XML标签或属性来解析，所以CDATA节中写什么符号都随意 -->
        <property name="name">
            <value><![CDATA[a < b]]></value>
        </property>
        <property name="age" value="23"> </property>
        <property name="sex"> <null/> </property>
        <!-- 如果想为sex赋值null，则要用此种方式，如果令value="null",则sex会被赋值为字符串null-->
    </bean>

    <!-- 为对象类型属性赋值: 方式1 => 引用外部bean -->
    <!-- 配置Clazz类型的bean -->
    <bean id="clazzOne" class="com.ygq.spring6.bean.SchoolClass">
        <property name="schoolClassId" value="1111"> </property>
        <property name="schoolClassName" value="高三八班"> </property>
    </bean>
    <!-- 为Student中的clazz属性赋值 -->
    <bean id="studentFour" class="com.ygq.spring6.bean.Student">
        <property name="id" value="1004"> </property>
        <property name="name" value="赵六"> </property>
        <property name="age" value="28"> </property>
        <property name="sex" value="女"> </property>
        <!-- ref属性：引用IOC容器中某个bean的id，将所对应的bean为属性赋值 -->
        <property name="clazz" ref="clazzOne"> </property>
    </bean>

    <!-- 为对象类型属性赋值: 方式2 => 内部bean -->
    <bean id="studentFourBeta" class="com.ygq.spring6.bean.Student">
        <property name="id" value="1004"> </property>
        <property name="name" value="赵六"> </property>
        <property name="age" value="26"> </property>
        <property name="sex" value="女"> </property>
        <property name="clazz">
            <bean class="com.ygq.spring6.bean.SchoolClass">
                <property name="schoolClassId" value="2222"> </property>
                <property name="schoolClassName" value="高三九班"> </property>
            </bean>
        </property>
    </bean>

    <!-- 为对象类型属性赋值: 方式3 => 级联属性赋值 -->
    <bean id="studentFourGamma" class="com.ygq.spring6.bean.Student">
        <property name="id" value="1004"> </property>
        <property name="name" value="赵六"> </property>
        <property name="age" value="26"> </property>
        <property name="sex" value="女"> </property>
        <!-- 此处的改变会影响到clazzOne中的内容 -->
        <property name="clazz" ref="clazzOne"> </property>
        <property name="clazz.schoolClassId" value="3333"> </property>
        <property name="clazz.schoolClassName" value="高三十班"> </property>
    </bean>

    <!-- 为数组类型属性赋值 -->
    <bean id="studentFive" class="com.ygq.spring6.bean.Student">
        <property name="id" value="1004"> </property>
        <property name="name" value="赵六"> </property>
        <property name="age" value="28"> </property>
        <property name="sex" value="女"> </property>
        <!-- ref属性：引用IOC容器中某个bean的id，将所对应的bean为属性赋值 -->
        <property name="clazz" ref="clazzOne"> </property>
        <property name="hobbies">
            <array>
                <value> 吃饭 </value>
                <value> 睡觉 </value>
                <value> 打豆豆 </value>
            </array>
        </property>
    </bean>

    <!-- 为List集合类型属性赋值 -->
    <bean id="clazzTwo" class="com.ygq.spring6.bean.SchoolClass">
        <property name="schoolClassId" value="4444"> </property>
        <property name="schoolClassName" value="1801班"> </property>
        <property name="studentList">
            <list> <!-- 当集合类型为set时，只需将list改为set标签即可 -->
                <ref bean="studentOne"></ref>
                <ref bean="studentTwo"></ref>
                <ref bean="studentThree"></ref>
            </list>
        </property>
    </bean>

    <!-- 为Map集合类型属性赋值 -->
    <bean id="teacherOne" class="com.ygq.spring6.bean.Teacher">
        <property name="teacherId" value="10010"> </property>
        <property name="teacherName" value="大宝"> </property>
    </bean>

    <bean id="teacherTwo" class="com.ygq.spring6.bean.Teacher">
        <property name="teacherId" value="10086"> </property>
        <property name="teacherName" value="二宝"> </property>
    </bean>

    <bean id="studentSix" class="com.ygq.spring6.bean.Student">
        <property name="id" value="1004"> </property>
        <property name="name" value="赵六"> </property>
        <property name="age" value="26"> </property>
        <property name="sex" value="女"> </property>
        <property name="clazz" ref="clazzTwo"> </property>
        <property name="hobbies">
            <array>
                <value> 吃饭 </value>
                <value> 睡觉 </value>
                <value> 打豆豆 </value>
            </array>
        </property>
        <property name="teacherMap">
            <map>
                <entry key="10010" value-ref="teacherOne"/>
                <entry key="10086" value-ref="teacherTwo"/>
            </map>
        </property>
    </bean>

    <!-- 引用集合类型的bean(注意:使用util:list、util:map标签必须在XML文件头部引入相应的命名空间) -->
    <!--list集合类型的bean-->
    <util:list id="students">
        <ref bean="studentOne"/>
        <ref bean="studentTwo"/>
        <ref bean="studentThree"/>
    </util:list>
    <!--map集合类型的bean-->
    <util:map id="teacherMap">
        <entry key="10010" value-ref="teacherOne"/>
        <entry key="10086" value-ref="teacherTwo"/>
    </util:map>
    <bean id="clazzThree" class="com.ygq.spring6.bean.SchoolClass">
        <property name="schoolClassId" value="6666"/>
        <property name="schoolClassName" value="1802"/>
        <property name="studentList" ref="students"/>
    </bean>
    <bean id="studentSeven" class="com.ygq.spring6.bean.Student">
        <property name="id" value="1004"/>
        <property name="name" value="赵六"/>
        <property name="age" value="26"/>
        <property name="sex" value="女"/>
        <property name="clazz" ref="clazzTwo"/>
        <property name="hobbies">
            <array>
                <value> 吃饭 </value>
                <value> 睡觉 </value>
                <value> 打豆豆 </value>
            </array>
        </property>
        <property name="teacherMap" ref="teacherMap"/>
    </bean>

    <!-- p命名空间(同样需要引入命名空间xmlns),可以省去property赋值过程 -->
    <bean id="studentEight"
          class="com.ygq.spring6.bean.Student"
          p:id="1006"
          p:name="小明"
          p:clazz-ref="clazzTwo"
          p:teacherMap-ref="teacherMap"/>





</beans>